env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io
jobs:
  build:
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Sanitize Version
      run: 'export VERSION=${GITHUB_REF#refs/tags/release-}

        export VERSION=${VERSION//-/.}

        echo "VERSION=$VERSION" >> $GITHUB_ENV

        '
    - continue-on-error: true
      id: meta
      name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: 'type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{env.VERSION}}

          type=semver,pattern={{major}}.{{minor}},value=${{env.VERSION}}

          type=semver,pattern={{major}},value=${{env.VERSION}}

          '
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      run: 'export COUNT=$(git rev-list --count $GITHUB_SHA)

        mvn -B verify --projects cli/linux --also-make -DskipTests

        dpkg-deb -R cli/linux/target/release/duck_${{env.VERSION}}.$COUNT-1_amd64.deb
        .

        '
    - continue-on-error: true
      name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
    - continue-on-error: true
      env:
        DOCKER_BUILDKIT: 1
      name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        labels: ${{ steps.meta.outputs.labels }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}
name: Create duck image
on:
  repository_dispatch:
    types: trigger-ga___duck.yml
